---
- name: Install MariaDB
  ansible.builtin.dnf:
    name: 
    - mariadb-server
    - python3-PyMySQL #Needed for the mysql_user module: https://docs.ansible.com/ansible/latest/collections/community/mysql/mysql_user_module.html
    state: present

- name: Start and enabble MariaDB Service
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: True

- name: Get stats of the password file to not overwrite
  ansible.builtin.stat:
    path: "{{ password_file }}"
  register: password_file_stat

- name: Create a password for the mysql accounts and write it to {{ password_file }} on the mariadb host
  ansible.builtin.lineinfile:
    path: "{{ password_file }}"
    line: "{{ lookup('password', '/dev/null length=12 chars=ascii_letters,digits') }}"
    create: yes
  when: not password_file_stat.stat.exists

- name: Read the generated password
  ansible.builtin.slurp:
    src: "{{ password_file }}"
  register: mysql_password

- name: Set the root pasword
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{mysql_password['content'] | b64decode }}"
    user: root
    check_implicit_admin: true
    password: "{{ mysql_password['content'] | b64decode }}"

- name: Create the application DB user
  community.mysql.mysql_user:
    login_user: root
    login_password: "{{ mysql_password['content'] | b64decode }}"
    name: webapp
    password: "{{ mysql_password['content'] | b64decode }}"
    priv: '*.*:ALL'
    state: present

- name: create simple appp database
  community.mysql.mysql_db:
    login_user: webapp
    login_password: "{{ mysql_password['content'] | b64decode }}"
    name: webapp_db
    state: present
  
- name: Run several insert queries against db test_db in single transaction
  community.mysql.mysql_query:
    login_user: webapp
    login_password: "{{ mysql_password['content'] | b64decode }}"
    login_db: webapp_db
    query:
    - CREATE TABLE IF NOT EXISTS webapp_db.INFO ( application_id INT AUTO_INCREMENT PRIMARY KEY, application_name VARCHAR(250) NOT NULL, application_version VARCHAR(20) NOT NULL);
    - TRUNCATE TABLE webapp_db.INFO;
    - INSERT INTO webapp_db.INFO (application_name, application_version) VALUES ('Security Workshop Application', '1.2.3');
    single_transaction: yes

- name: Export password for Apache setup
  ansible.builtin.set_stats:
    data:
      webapp_password: "{{mysql_password['content'] | b64decode }}"
     